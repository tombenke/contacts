var cradle = require( 'cradle' );

var db = {};


function init( dbName )
{
    db = new( cradle.Connection )().database( dbName );
    return db;
}


function writeResponse( err, results, response, encapsulateRow )
{
    response.header( 'Content-Type', 'application/json; charset=utf-8' );

//    response.header( 'Origin', '*' );
    response.header( 'Access-Control-Allow-Origin', '*' );
    response.header( 'Access-Control-Allow-Methods', 'POST, GET, OPTIONS' );
    response.header( 'Access-Control-Request-Headers', 'Origin, X-Requested-With' );
    response.header( 'Access-Control-Allow-Headers', 'Origin, X-Requested-With' );
    response.header( 'Access-Control-Allow-Credentials', 'true' );

    var numRows = results.rows.length;
    var startRow = 0;
    var endRow = numRows - 1;
    if( encapsulateRow )
    {
        response.write(
            '{ response: { status: 0, startRow: ' + startRow +
            ', endRow: ' + endRow +
            ', totalRows: ' + numRows + ', ' );
        response.write( 'data: [' );
        var sep = '\n';
        results.forEach(
            function( row )
            {
                response.write( sep + '{ doc: ' + JSON.stringify( row ) + '}' );
                sep = ',\n';
            }
        );
        response.write( '] } }' );
    }
    else
    {
        response.write(
            '{ status: 0, startRow: ' + startRow +
            ', endRow: ' + endRow +
            ', totalRows: ' + numRows + ', ' );
        response.write( 'data: [' );
        var sep = '\n';
        results.forEach(
            function( row )
            {
                response.write( sep + JSON.stringify( row ) );

                sep = ',\n';
            }
        );
        response.write( '] }' );
    }

    response.end( '\n' );
}


function getViewExt( viewName, response )
{
    db.view(
        viewName,
        function( err, results )
        {
            writeResponse( err, results, response, false );
        }
    );
}


function getView( viewName, response, viewParameters )
{
    db.view(
        viewName,
        function( err, results )
        {
            writeResponse( err, results, response, true );
        }
    );
}


function getViewExtWithParameters( viewName, viewParameters, response )
{
    db.view(
        viewName,
        viewParameters,
        function( err, results )
        {
            writeResponse( err, results, response, false );
        }
    );
}


function getViewWithParameters( viewName, viewParameters, response )
{
    db.view(
        viewName,
        viewParameters,
        function( err, results )
        {
            writeResponse( err, results, response, true );
        }
    );
}


function getViewCsv( viewName, response )
{
    db.view(
        viewName,
        function( err, results )
        {
            response.header( 'Content-Type', 'text/csv; charset=utf-8' );
            var numRows = results.rows.length;
            if( numRows > 0 )
            {
                writeHeader = true;
                results.forEach(
                    function( row )
                    {
                        //var row = results.rows[0].value;

                        var keys = Object.getOwnPropertyNames( row );
                        keys.sort();
                        if( writeHeader )
                        {
                            writeHeader = false;
                            for( var i=0; i < keys.length; i++ )
                            {
                                console.log(keys);
                                response.write( '"' + keys[i] + '";' );
                            }
                            response.write( "\n" );
                        }

                        for( var i=0; i < keys.length; i++ )
                        {
                            console.log(keys);
                            response.write( JSON.stringify( row[ keys[i] ] ) + ';' );
                        }
                        response.write( "\n" );
                    }
                );
            }
            response.end( '\n' );
        }
    );
}

function add( doc, response, content )
{
    console.log( 'add: ', JSON.stringify( doc, null, '    ' ) );
    db.save(
        doc._id,
        doc,
        function( err, res )
        {
            if( err )
            {
                // Handle error
                console.log('error', res );
            }
            else
            {
                // Handle success
                console.log('success', res );
                doc._id = res.id;
                doc._rev = res.rev;
            }

            response.header( 'Content-Type', 'application/json; charset=utf-8' );
            response.write( JSON.stringify( content ) );
            response.end( '\n' );
        }
    );
}

function remove( doc, response, content )
{
    console.log( 'remove: ', JSON.stringify( doc, null, '    ' ) );
    db.remove(
        doc._id,
        doc._rev,
        function( err, res )
        {
            if( err )
            {
                // Handle error
                console.log('error', res );
            }
            else
            {
                // Handle success
                console.log('success', res );
            }

            response.header( 'Content-Type', 'application/json; charset=utf-8' );
            response.write( JSON.stringify( content ) );
            response.end( '\n' );
        }
    );
}

function postDoc( request, response, updateDoc )
{
    var doc = {
        _id: request.body._id || ""
    };

    var responseContent = {
        response: {
            status: 0,
            startRow: 0,
            endRow: 1,
            totalRows: 1
        }
    };

    if( request.body._operationType === "remove" )
    {
        // Remove the document
        doc._rev = request.body._rev;
        responseContent.response.data = [ {doc: {_id: request.body._id}} ];
        remove( doc, response, responseContent );
    }
    else if( request.body._operationType === "update" )
    {
        doc = updateDoc( request, false );

        responseContent.response.data = [ {doc: doc} ];
        add( doc, response, responseContent );
    }
    else if( request.body._operationType === "add" )
    {
        doc = updateDoc( request, true );
        delete doc._rev;
        responseContent.response.data = [ {doc: doc} ];
        add( doc, response, responseContent );
    }
    else
    {
        // Unsopported operation
        console.log( "Error: unsupported operation(" + request.body._operationType + ")" );
    }
};

function postDocExt( request, response, updateDoc )
{
    var doc = {
        _id: request.body._id || ""
    };

    var responseContent = {
        success: true,
        startRow: 0,
        endRow: 1,
        total: 1
    };

    doc = updateDoc( request, false );

    responseContent.data = [ doc ];
    add( doc, response, responseContent );
};

function deleteDocExt( request, response )
{
    var doc = {
        _id: request.body._id || ""
    };

    console.log( 'delete: ', JSON.stringify( doc, null, '    ' ) );

    var responseContent = {
        success: true
    };

    db.get(
        doc._id,
        function( err, doc )
        {
            if( err )
            {
                // Handle error
                console.log('get.error', doc );
                response.header( 'Content-Type', 'application/json; charset=utf-8' );
                responseContent.success = false;
                response.write( JSON.stringify( responseContent ) );
                response.end( '\n' );
            }
            else
            {
                // Handle success
                console.log('get.success', doc );
                db.remove(
                    doc._id,
                    doc._rev,
                    function( err, res )
                    {
                        if( err )
                        {
                            // Handle error
                            console.log('remove.error', res );
                            responseContent.success = false;
                        }
                        else
                        {
                            // Handle success
                            console.log('remove.success', res );
                        }

                        response.header( 'Content-Type', 'application/json; charset=utf-8' );
                        response.write( JSON.stringify( responseContent ) );
                        response.end( '\n' );
                    }
                );
            }
        }
    );
};

function view( viewName, options, callback )
{
    db.view(
        viewName,
        options,
        callback
    );
}


exports.db = db;
exports.view = view;
exports.init = init;
exports.add = add;
exports.remove = remove;
exports.getView = getView;
exports.getViewWithParameters = getViewWithParameters;
exports.getViewExtWithParameters = getViewExtWithParameters;
exports.getViewExt = getViewExt;
exports.getViewCsv = getViewCsv;
exports.postDoc = postDoc;
exports.postDocExt = postDocExt;
exports.deleteDocExt = deleteDocExt;
